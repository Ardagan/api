// Copyright (c) 2019 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package common;
option go_package = "github.com/temporalio/temporal-proto/common";

import "google/protobuf/wrappers.proto";

import "enums/enums.proto";

message DomainInfo {
    string name = 1;
    enums.DomainStatus status = 2;
    string description = 3;
    string ownerEmail = 4;
    // A key-value map for any customized purpose.
    map<string, string> data = 5;
    string uuid = 6;
}

message DomainConfiguration {
    int32 workflowExecutionRetentionPeriodInDays = 1;
    google.protobuf.BoolValue emitMetric = 2;
    BadBinaries badBinaries = 3;
    enums.ArchivalStatus historyArchivalStatus = 4;
    string historyArchivalURI = 5;
    enums.ArchivalStatus visibilityArchivalStatus = 6;
    string visibilityArchivalURI = 7;
}

message BadBinaries {
    map<string, BadBinaryInfo> binaries = 1;
}

message BadBinaryInfo {
    string reason = 1;
    string operator = 2;
    int64 createdTimeNano = 3;
}

message UpdateDomainInfo {
    string description = 1;
    string ownerEmail = 2;
    // A key-value map for any customized purpose.
    map<string, string> data = 3;
}

message ClusterReplicationConfiguration {
    string clusterName = 1;
}

message DomainReplicationConfiguration {
    string activeClusterName = 1;
    repeated ClusterReplicationConfiguration clusters = 2;
}

message DomainCacheInfo {
    int64 numOfItemsInCacheByID = 1;
    int64 numOfItemsInCacheByName = 2;
}
